open import Level.NP
open import Type
open import Relation.Binary.Logical
open import Relation.Binary.PropositionalEquality

module Explore.Universe.Logical (X : โ) where

open import Explore.Universe.Type
open import Explore.Universe X
open import Explore.Core

module FromโฆXโง (โฆXโง : โฆโโโง X X) where

  -- TODO _โฆโโง_ : (โฆRelโง โฆโโโง) โ _โ_ _โ_

  data โฆUโง : โฆโโโง U U
  โฆElโง : (โฆUโง โฆโโง โฆโโโง) El El

  data โฆUโง where
    โฆ๐แตโง : โฆUโง ๐แต ๐แต
    โฆ๐แตโง : โฆUโง ๐แต ๐แต
    โฆ๐แตโง : โฆUโง ๐แต ๐แต
    _โฆรแตโง_ : โฆOpโโง {_} {_} {โ} โฆUโง _รแต_ _รแต_
    _โฆโแตโง_ : โฆOpโโง {_} {_} {โ} โฆUโง _โแต_ _โแต_
    โฆฮฃแตโง : (โจ u โถ โฆUโง โฉโฆโโง (โฆElโง u โฆโโง โฆUโง) โฆโโง โฆUโง) ฮฃแต ฮฃแต
    โฆXแตโง : โฆUโง Xแต Xแต
    -- โฆโแตโง : (โจ u โถ โฆUโง โฉโฆโโง (โจ A โถ โฆโโโง โฉโฆโโง โฆElโง u โฆโโง A โฆโโง โฆUโง)) โแต โแต

  โฆElโง โฆ๐แตโง = _โก_
  โฆElโง โฆ๐แตโง = _โก_
  โฆElโง โฆ๐แตโง = _โก_
  โฆElโง (uโ โฆรแตโง uโ) = โฆElโง uโ โฆรโง โฆElโง uโ
  โฆElโง (uโ โฆโแตโง uโ) = โฆElโง uโ โฆโโง โฆElโง uโ
  โฆElโง (โฆฮฃแตโง u f) = โฆฮฃโง (โฆElโง u) ฮป x โ โฆElโง (f x)
  โฆElโง โฆXแตโง = โฆXโง
  -- โฆElโง (โฆโแตโง u A e) = A

  module FromโฆXแตโง
           {โฆXโง : โฆโโโง X X}
           {โโ โโ} โแตฃ
           {Xแต : Explore X}
           (โฆXแตโง : โฆExploreโง {โโ} {โโ} โแตฃ โฆXโง Xแต Xแต) where
    open FromโฆXโง โฆXโง public

    โฆexploreโง : โ {uโ uโ} (u : โฆUโง uโ uโ) โ โฆExploreโง {โโ} {โโ} โแตฃ (โฆElโง u) (explore uโ) (explore uโ)
    โฆexploreโง โฆ๐แตโง        = โฆ๐แตโง {โโ} {โโ} {โแตฃ}
    โฆexploreโง โฆ๐แตโง        = โฆ๐แตโง {โโ} {โโ} {โแตฃ} {_โก_} {refl}
    โฆexploreโง โฆ๐แตโง        = โฆ๐แตโง {โโ} {โโ} {โแตฃ} {_โก_} {refl} {refl}
    โฆexploreโง (uโ โฆรแตโง uโ) = โฆexploreรโง {โโ} {โโ} {โแตฃ} (โฆexploreโง uโ) (โฆexploreโง uโ)
    โฆexploreโง (uโ โฆโแตโง uโ) = โฆexploreโโง {โโ} {โโ} {โแตฃ} (โฆexploreโง uโ) (โฆexploreโง uโ)
    โฆexploreโง (โฆฮฃแตโง u f)  = โฆexploreฮฃโง {โโ} {โโ} {โแตฃ} (โฆexploreโง u) (โฆexploreโง โ f)
    โฆexploreโง โฆXแตโง        = โฆXแตโง
    -- โฆexploreโง (โฆโแตโง u A e) = {!โฆexplore-isoโง e!}


{-
โฆUโง-sound : โ {{_ : FunExt}} {x y} โ โฆUโง x y โ x โก y
โฆUโง-refl : โ x โ โฆUโง x x

{-
โฆElโง-refl : โ x โ {!โฆElโง x x!}
โฆElโง-refl = {!!}
-}

โฆUโง-sound โฆ๐แตโง = refl
โฆUโง-sound โฆ๐แตโง = refl
โฆUโง-sound โฆ๐แตโง = refl
โฆUโง-sound (u โฆรแตโง uโ) = apโ _รแต_ (โฆUโง-sound u) (โฆUโง-sound uโ)
โฆUโง-sound (u โฆโแตโง uโ) = apโ _โแต_ (โฆUโง-sound u) (โฆUโง-sound uโ)
โฆUโง-sound (โฆฮฃแตโง {uโ} {uโ} u {fโ} {fโ} fแตฃ) = apdโ ฮฃแต (โฆUโง-sound u) (tr-โ El (const U) (โฆUโง-sound u) fโ โ ฮป= (ฮป A โ ap (ฮป z โ z (fโ (tr El (! โฆUโง-sound u) A))) (tr-const (โฆUโง-sound u)) โ โฆUโง-sound (fแตฃ {!!}))) -- (ฮป= (ฮป y โ let foo = xแตฃ {{!!}} {y} {!xแตฃ!} in {!tr-โ El (const U) (โฆUโง-sound u)!}))

โฆUโง-refl ๐แต = โฆ๐แตโง
โฆUโง-refl ๐แต = โฆ๐แตโง
โฆUโง-refl ๐แต = โฆ๐แตโง
โฆUโง-refl (x รแต xโ) = โฆUโง-refl x โฆรแตโง โฆUโง-refl xโ
โฆUโง-refl (x โแต xโ) = โฆUโง-refl x โฆโแตโง โฆUโง-refl xโ
โฆUโง-refl (ฮฃแต x f) = โฆฮฃแตโง (โฆUโง-refl x) (ฮป y โ {!โฆUโง-refl ?!})
-}
