{-# OPTIONS --without-K #-}
open import Level.NP
open import Type
open import Type.Identities
open import Function.NP
open import Function.Extensionality
open import Data.Zero
open import Data.One
open import Data.Two
open import Data.Product.NP
open import Data.Sum.NP
open import Data.Sum.Logical
open import Data.Nat
open import Data.Fin
open import Relation.Nullary.NP
open import Relation.Binary.PropositionalEquality.NP
open import Relation.Binary.Logical

open import HoTT
open Equivalences

open import Explore.Core
open import Explore.Properties
open import Explore.Zero
open import Explore.One
open import Explore.Two
open import Explore.Product
open import Explore.Sum
open import Explore.Explorable
open import Explore.Universe
import Explore.Isomorphism

module Explore.Universe.Base where

module _ {k} {K : РўЁ_ k} {a} {A : РўЁ_ a} {x y : A} (p : x РЅА y) where
    tr-const : tr (const K) p РЅА id
    tr-const = J (╬╗ xРѓЂ pРѓЂ Рєњ tr (const K) pРѓЂ РЅА id) refl p

open FromKit ­ЮЪўРЂ▒ (╬╗ {{ua}}{{_}} Рєњ ­ЮЪў╦б-ok {{ua}}) ­ЮЪў╦А ­ЮЪўрХа
             (╬╗ {{ua}} Рєњ ╬БрхЅ­ЮЪў-ok {{ua}})
             ╬архЅ­ЮЪў-ok (╬╗ {РёЊРѓђ РёЊРѓЂ} РёЊрхБ Рєњ РЪд­ЮЪўрхЅРЪД {РёЊРѓђ} {РёЊРѓЂ} {РёЊрхБ} {_РЅА_}) public

╬архЂ : (u : U) (v : El u Рєњ U) Рєњ U
╬архЂ ­ЮЪўрхЂ        v = ­ЮЪЎрхЂ
╬архЂ ­ЮЪЎрхЂ        v = v _
╬архЂ ­ЮЪџрхЂ        v = v 0Рѓѓ ├ЌрхЂ v 1Рѓѓ
╬архЂ (u ├ЌрхЂ uРѓЂ) v = ╬архЂ u ╬╗ x Рєњ ╬архЂ uРѓЂ ╬╗ y Рєњ v (x , y)
╬архЂ (u РіјрхЂ uРѓЂ) v = (╬архЂ u (v Рѕў inl)) ├ЌрхЂ (╬архЂ uРѓЂ (v Рѕў inr))
╬архЂ (╬БрхЂ u f)  v = ╬архЂ u ╬╗ x Рєњ ╬архЂ (f x) (v Рѕў _,_ x)
╬архЂ XрхЂ        v = ­ЮЪЎрхЂ

_РєњрхЂ_ : (u : U) (v : U) Рєњ U
u РєњрхЂ v = ╬архЂ u (const v)

module _ {{_ : FunExt}}{{_ : UA}} where
  ╬архЂ-╬а : Рѕђ u v Рєњ El (╬архЂ u v) РЅА ╬а (El u) (El Рѕў v)
  ╬архЂ-╬а ­ЮЪўрхЂ        v = ! ╬а­ЮЪў-uniqРѓђ _
  ╬архЂ-╬а ­ЮЪЎрхЂ        v = ! ╬а­ЮЪЎ-uniq _
  ╬архЂ-╬а ­ЮЪџрхЂ        v = ! ╬а­ЮЪџ-├Ќ
  ╬архЂ-╬а (u ├ЌрхЂ uРѓЂ) v = ╬архЂ-╬а u (╬╗ x Рєњ ╬архЂ uРѓЂ (v Рѕў _,_ x)) РѕЎ ╬а=Рђ▓ _ (╬╗ _ Рєњ ╬архЂ-╬а uРѓЂ _) РѕЎ ! ╬а╬Б-curry
  ╬архЂ-╬а (u РіјрхЂ uРѓЂ) v = ├Ќ= (╬архЂ-╬а u (v Рѕў inl)) (╬архЂ-╬а uРѓЂ (v Рѕў inr)) РѕЎ ! dist-├Ќ-╬а
  ╬архЂ-╬а (╬БрхЂ u f)  v = ╬архЂ-╬а u (╬╗ x Рєњ ╬архЂ (f _) (v Рѕў _,_ x)) РѕЎ ╬а=Рђ▓ _ (╬╗ _ Рєњ ╬архЂ-╬а (f _) _) РѕЎ ! ╬а╬Б-curry
  ╬архЂ-╬а XрхЂ        v = ! ╬а­ЮЪў-uniqРѓђ _

  РєњрхЂ-Рєњ : Рѕђ u v Рєњ El (u РєњрхЂ v) РЅА (El u Рєњ El v)
  РєњрхЂ-Рєњ u v = ╬архЂ-╬а u (const v)

╬архЂРєњ╬а : Рѕђ u v Рєњ El (╬архЂ u v) Рєњ ╬а (El u) (El Рѕў v)
╬архЂРєњ╬а ­ЮЪўрхЂ v xРѓѓ ()
╬архЂРєњ╬а ­ЮЪЎрхЂ v xРѓѓ xРѓЃ = xРѓѓ
╬архЂРєњ╬а ­ЮЪџрхЂ v (x , y) 0Рѓѓ = x
╬архЂРєњ╬а ­ЮЪџрхЂ v (x , y) 1Рѓѓ = y
╬архЂРєњ╬а (u ├ЌрхЂ uРѓЂ) v x (z , t) = ╬архЂРєњ╬а uРѓЂ (v Рѕў _,_ z) (╬архЂРєњ╬а u (╬╗ x Рєњ ╬архЂ uРѓЂ (v Рѕў _,_ x)) x z) t
╬архЂРєњ╬а (u РіјрхЂ _) v (x , _) (inl y) = ╬архЂРєњ╬а u (v Рѕў inl) x y
╬архЂРєњ╬а (_ РіјрхЂ u) v (_ , x) (inr y) = ╬архЂРєњ╬а u (v Рѕў inr) x y
╬архЂРєњ╬а (╬БрхЂ u f) v x       (y , z) = ╬архЂРєњ╬а (f _) (v Рѕў _,_ y) (╬архЂРєњ╬а u (╬╗ x Рєњ ╬архЂ (f _) (v Рѕў _,_ x)) x y) z
╬архЂРєњ╬а XрхЂ v xРѓѓ ()

╬аРєњ╬архЂ : Рѕђ u v Рєњ ╬а (El u) (El Рѕў v) Рєњ El (╬архЂ u v)
╬аРєњ╬архЂ ­ЮЪўрхЂ v f = 0РѓЂ
╬аРєњ╬архЂ ­ЮЪЎрхЂ v f = f 0РѓЂ
╬аРєњ╬архЂ ­ЮЪџрхЂ v f = f 0Рѓѓ , f 1Рѓѓ
╬аРєњ╬архЂ (u ├ЌрхЂ uРѓЂ) v f = ╬аРєњ╬архЂ u (╬╗ x Рєњ ╬архЂ uРѓЂ (v Рѕў _,_ x))
                       (╬╗ x Рєњ ╬аРєњ╬архЂ uРѓЂ (v Рѕў _,_ x) (f Рѕў _,_ x))
╬аРєњ╬архЂ (u РіјрхЂ uРѓЂ) v f = ╬аРєњ╬архЂ u (v Рѕў inl) (f Рѕў inl) ,
                       ╬аРєњ╬архЂ uРѓЂ (v Рѕў inr) (f Рѕў inr)
╬аРєњ╬архЂ (╬БрхЂ u F) v f = ╬аРєњ╬архЂ u (╬╗ x Рєњ ╬архЂ (F x) (v Рѕў _,_ x))
                      (╬╗ x Рєњ ╬аРєњ╬архЂ (F x) (v Рѕў _,_ x) (f Рѕў _,_ x))
╬аРєњ╬архЂ XрхЂ v f = 0РѓЂ

РєњрхЂРєњРєњ : Рѕђ u v Рєњ El (u РєњрхЂ v) Рєњ (El u Рєњ El v)
РєњрхЂРєњРєњ u v = ╬архЂРєњ╬а u (const v)

РєњРєњРєњрхЂ : Рѕђ u v Рєњ (El u Рєњ El v) Рєњ El (u РєњрхЂ v)
РєњРєњРєњрхЂ u v = ╬аРєњ╬архЂ u (const v)

{-
РЪдUРЪД-sound : Рѕђ {{_ : FunExt}} {x y} Рєњ РЪдUРЪД x y Рєњ x РЅА y
РЪдUРЪД-refl : Рѕђ x Рєњ РЪдUРЪД x x

{-
РЪдElРЪД-refl : Рѕђ x Рєњ {!РЪдElРЪД x x!}
РЪдElРЪД-refl = {!!}
-}

РЪдUРЪД-sound РЪд­ЮЪўрхЂРЪД = refl
РЪдUРЪД-sound РЪд­ЮЪЎрхЂРЪД = refl
РЪдUРЪД-sound РЪд­ЮЪџрхЂРЪД = refl
РЪдUРЪД-sound (u РЪд├ЌрхЂРЪД uРѓЂ) = apРѓѓ _├ЌрхЂ_ (РЪдUРЪД-sound u) (РЪдUРЪД-sound uРѓЂ)
РЪдUРЪД-sound (u РЪдРіјрхЂРЪД uРѓЂ) = apРѓѓ _РіјрхЂ_ (РЪдUРЪД-sound u) (РЪдUРЪД-sound uРѓЂ)
РЪдUРЪД-sound (РЪд╬БрхЂРЪД {uРѓђ} {uРѓЂ} u {fРѓђ} {fРѓЂ} fрхБ) = apdРѓѓ ╬БрхЂ (РЪдUРЪД-sound u) (tr-Рєњ El (const U) (РЪдUРЪД-sound u) fРѓђ РѕЎ ╬╗= (╬╗ A Рєњ ap (╬╗ z Рєњ z (fРѓђ (tr El (! РЪдUРЪД-sound u) A))) (tr-const (РЪдUРЪД-sound u)) РѕЎ РЪдUРЪД-sound (fрхБ {!!}))) -- (╬╗= (╬╗ y Рєњ let foo = xрхБ {{!!}} {y} {!xрхБ!} in {!tr-Рєњ El (const U) (РЪдUРЪД-sound u)!}))

РЪдUРЪД-refl ­ЮЪўрхЂ = РЪд­ЮЪўрхЂРЪД
РЪдUРЪД-refl ­ЮЪЎрхЂ = РЪд­ЮЪЎрхЂРЪД
РЪдUРЪД-refl ­ЮЪџрхЂ = РЪд­ЮЪџрхЂРЪД
РЪдUРЪД-refl (x ├ЌрхЂ xРѓЂ) = РЪдUРЪД-refl x РЪд├ЌрхЂРЪД РЪдUРЪД-refl xРѓЂ
РЪдUРЪД-refl (x РіјрхЂ xРѓЂ) = РЪдUРЪД-refl x РЪдРіјрхЂРЪД РЪдUРЪД-refl xРѓЂ
РЪдUРЪД-refl (╬БрхЂ x f) = РЪд╬БрхЂРЪД (РЪдUРЪД-refl x) (╬╗ y Рєњ {!РЪдUРЪД-refl ?!})
-}

-- -}
-- -}
-- -}
-- -}
-- -}
